<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>BBAT</class>
 <widget class="QWidget" name="BBAT">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1900</width>
    <height>900</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QGroupBox" name="groupBox_4">
   <property name="geometry">
    <rect>
     <x>950</x>
     <y>57</y>
     <width>740</width>
     <height>175</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">background:color rgb(150,160,186,40%);
border-radius:10px;</string>
   </property>
   <property name="title">
    <string/>
   </property>
   <widget class="QPushButton" name="pbHarness_4">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>2</y>
      <width>261</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>14</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(53, 74, 131); 
color: rgb(255, 255, 255);</string>
    </property>
    <property name="text">
     <string>Battery Voltage Check</string>
    </property>
   </widget>
   <widget class="QLabel" name="lblBBATTJ7BtoJ7C">
    <property name="geometry">
     <rect>
      <x>410</x>
      <y>60</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J7-B to J7-C</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblBBATTJ7AJcC">
    <property name="geometry">
     <rect>
      <x>40</x>
      <y>120</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J7-A to J7-C</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_73">
    <property name="geometry">
     <rect>
      <x>340</x>
      <y>121</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(150,160,186,1%);
color:rgb(53,74, 131);
</string>
    </property>
    <property name="text">
     <string>V</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_41">
    <property name="geometry">
     <rect>
      <x>340</x>
      <y>65</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(150,160,186,1%);
color:rgb(53,74, 131);
</string>
    </property>
    <property name="text">
     <string>V</string>
    </property>
   </widget>
   <widget class="QLabel" name="lblBBATTJ7AtoJ7B">
    <property name="geometry">
     <rect>
      <x>38</x>
      <y>60</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J7-A to J7-B</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_74">
    <property name="geometry">
     <rect>
      <x>710</x>
      <y>65</y>
      <width>41</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(150,160,186,1%);
color:rgb(53,74, 131);
</string>
    </property>
    <property name="text">
     <string>V</string>
    </property>
   </widget>
   <widget class="QDoubleSpinBox" name="dbsJ7aToJ7b">
    <property name="geometry">
     <rect>
      <x>260</x>
      <y>60</y>
      <width>70</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
color:rgb(53,74, 131);
border-radius:5px;
</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
    <property name="buttonSymbols">
     <enum>QAbstractSpinBox::NoButtons</enum>
    </property>
   </widget>
   <widget class="QDoubleSpinBox" name="dbsJ7btoJ7c">
    <property name="geometry">
     <rect>
      <x>630</x>
      <y>60</y>
      <width>70</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
color:rgb(53,74, 131);
border-radius:5px;
</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
    <property name="buttonSymbols">
     <enum>QAbstractSpinBox::NoButtons</enum>
    </property>
   </widget>
   <widget class="QDoubleSpinBox" name="dbsJ7aToJ7c">
    <property name="geometry">
     <rect>
      <x>260</x>
      <y>120</y>
      <width>70</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
color:rgb(53,74, 131);
border-radius:5px;
</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
    <property name="buttonSymbols">
     <enum>QAbstractSpinBox::NoButtons</enum>
    </property>
   </widget>
  </widget>
  <widget class="QGroupBox" name="groupBox">
   <property name="geometry">
    <rect>
     <x>200</x>
     <y>58</y>
     <width>740</width>
     <height>175</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">background:color rgb(150,160,186,40%);
border-radius:10px;</string>
   </property>
   <property name="title">
    <string/>
   </property>
   <widget class="QLabel" name="lblHarnessDO1">
    <property name="geometry">
     <rect>
      <x>289</x>
      <y>83</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblCorrectHDI1">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>77</y>
      <width>160</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>DI-1</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QPushButton" name="pbHarness">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>301</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>14</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(53, 74, 131); 
color: rgb(255, 255, 255);</string>
    </property>
    <property name="text">
     <string>BBAT harness check connection</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_103">
    <property name="geometry">
     <rect>
      <x>124</x>
      <y>40</y>
      <width>61</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DI</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_104">
    <property name="geometry">
     <rect>
      <x>265</x>
      <y>43</y>
      <width>81</width>
      <height>33</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_114">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>40</y>
      <width>191</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuity Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContErrHarnessDO1">
    <property name="geometry">
     <rect>
      <x>430</x>
      <y>86</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblCorrectHDI2">
    <property name="geometry">
     <rect>
      <x>60</x>
      <y>127</y>
      <width>160</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>DI-2</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblHarnessDO2">
    <property name="geometry">
     <rect>
      <x>289</x>
      <y>130</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContErrHarnessDO2">
    <property name="geometry">
     <rect>
      <x>430</x>
      <y>130</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContErrHarnessDI2_OnOff">
    <property name="geometry">
     <rect>
      <x>580</x>
      <y>130</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContErrHarnessDI1_OnOff">
    <property name="geometry">
     <rect>
      <x>580</x>
      <y>86</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_105">
    <property name="geometry">
     <rect>
      <x>550</x>
      <y>45</y>
      <width>81</width>
      <height>33</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO ON</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
  </widget>
  <widget class="QLabel" name="lblOPRMODE_2">
   <property name="geometry">
    <rect>
     <x>796</x>
     <y>4</y>
     <width>291</width>
     <height>41</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Roboto</family>
     <pointsize>25</pointsize>
     <weight>75</weight>
     <bold>true</bold>
     <underline>true</underline>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">
background:rgb(234, 236, 247);


color:rgb(53,74, 131);
</string>
   </property>
   <property name="text">
    <string>BBAT</string>
   </property>
   <property name="alignment">
    <set>Qt::AlignCenter</set>
   </property>
  </widget>
  <widget class="QGroupBox" name="groupBox_2">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>240</y>
     <width>1881</width>
     <height>651</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">background:color rgb(150,160,186,40%);
border-radius:10px;</string>
   </property>
   <property name="title">
    <string/>
   </property>
   <widget class="QLabel" name="lblJ2A_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>130</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-A</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2C_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>230</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-C</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2H_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>330</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-H </string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ5B_DO">
    <property name="geometry">
     <rect>
      <x>677</x>
      <y>130</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J5-B</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ4A_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>530</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J4-A</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ3A_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>430</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J3-A</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ7A_DO">
    <property name="geometry">
     <rect>
      <x>677</x>
      <y>330</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J7-A</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ7B_DO">
    <property name="geometry">
     <rect>
      <x>677</x>
      <y>380</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J7-B</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ61_DO">
    <property name="geometry">
     <rect>
      <x>677</x>
      <y>280</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J6-1</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ5E_DO">
    <property name="geometry">
     <rect>
      <x>677</x>
      <y>180</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J5-E</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ5A_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>580</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J5-A</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ3B_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>480</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J3-B</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2J_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>380</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-J</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2G_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>280</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-G</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2B_DO">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>180</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-B</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QPushButton" name="pbHarness_2">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>151</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>14</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(53, 74, 131); 
color: rgb(255, 255, 255);</string>
    </property>
    <property name="text">
     <string>Test</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_107">
    <property name="geometry">
     <rect>
      <x>52</x>
      <y>77</y>
      <width>61</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO</string>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ8A_DO">
    <property name="geometry">
     <rect>
      <x>677</x>
      <y>430</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J8-A</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ8E_DO">
    <property name="geometry">
     <rect>
      <x>677</x>
      <y>530</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J8-E</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ8C_DO">
    <property name="geometry">
     <rect>
      <x>677</x>
      <y>480</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J8-C</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ8G_DI">
    <property name="geometry">
     <rect>
      <x>1380</x>
      <y>130</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J8-G</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_109">
    <property name="geometry">
     <rect>
      <x>705</x>
      <y>75</y>
      <width>61</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO</string>
    </property>
   </widget>
   <widget class="QLabel" name="lblTimerChkDO1">
    <property name="geometry">
     <rect>
      <x>1610</x>
      <y>197</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblTimerChkDI2">
    <property name="geometry">
     <rect>
      <x>1380</x>
      <y>250</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>TIMER CHECK DI-2</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblTimerChkDI1">
    <property name="geometry">
     <rect>
      <x>1380</x>
      <y>190</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>TIMER CHECK DI-1</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblTimerChkDO2">
    <property name="geometry">
     <rect>
      <x>1610</x>
      <y>255</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2A">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2H">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>330</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_110">
    <property name="geometry">
     <rect>
      <x>132</x>
      <y>76</y>
      <width>111</width>
      <height>61</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuity
 Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ4A">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>530</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ3A">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>430</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2C">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>230</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ8E">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>530</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ5B">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ8A">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>430</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ7A">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>330</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbTimerChkDO1">
    <property name="geometry">
     <rect>
      <x>1697</x>
      <y>190</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string>Continuity 
 Error</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ8C">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>480</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2G">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>280</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ5A">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>580</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ61">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>280</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2B">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>180</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ3B">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>480</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ7B">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>380</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_111">
    <property name="geometry">
     <rect>
      <x>770</x>
      <y>75</y>
      <width>131</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuity
Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ5E">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>180</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbTimerChkDO2">
    <property name="geometry">
     <rect>
      <x>1697</x>
      <y>250</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string>Continuity 
 Error</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2J">
    <property name="geometry">
     <rect>
      <x>170</x>
      <y>380</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QDoubleSpinBox" name="dsTimerVal">
    <property name="geometry">
     <rect>
      <x>1635</x>
      <y>315</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
color:rgb(53,74, 131);
border-radius:5px;
</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
    <property name="buttonSymbols">
     <enum>QAbstractSpinBox::NoButtons</enum>
    </property>
    <property name="suffix">
     <string/>
    </property>
    <property name="decimals">
     <number>0</number>
    </property>
    <property name="maximum">
     <double>200.000000000000000</double>
    </property>
    <property name="value">
     <double>178.000000000000000</double>
    </property>
   </widget>
   <widget class="QLabel" name="label_112">
    <property name="geometry">
     <rect>
      <x>1406</x>
      <y>310</y>
      <width>191</width>
      <height>51</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>12</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Timer Value to send
Power OFF DO1 &amp; DO2</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_113">
    <property name="geometry">
     <rect>
      <x>1735</x>
      <y>325</y>
      <width>61</width>
      <height>20</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>12</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>(secs)</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblPowerOn">
    <property name="geometry">
     <rect>
      <x>470</x>
      <y>19</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
background:rgb(234, 236, 247);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>Power ON DI</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_108">
    <property name="geometry">
     <rect>
      <x>400</x>
      <y>19</y>
      <width>61</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DI</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_115">
    <property name="geometry">
     <rect>
      <x>1660</x>
      <y>82</y>
      <width>111</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuity
Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_116">
    <property name="geometry">
     <rect>
      <x>1608</x>
      <y>90</y>
      <width>31</width>
      <height>21</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_117">
    <property name="geometry">
     <rect>
      <x>1463</x>
      <y>90</y>
      <width>31</width>
      <height>21</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DI</string>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ7C_DO">
    <property name="geometry">
     <rect>
      <x>1015</x>
      <y>330</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J7-C</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ5D_DO">
    <property name="geometry">
     <rect>
      <x>1015</x>
      <y>130</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J5-D</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2L_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>330</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-L</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ4B_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>530</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J4-B</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ8B_DO">
    <property name="geometry">
     <rect>
      <x>1015</x>
      <y>430</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J8-B</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ8F_DO">
    <property name="geometry">
     <rect>
      <x>1015</x>
      <y>530</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J8-F</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ3C_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>430</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J3-C</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2D_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>130</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-D</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2F_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>230</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-F</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_118">
    <property name="geometry">
     <rect>
      <x>377</x>
      <y>80</y>
      <width>61</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO</string>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ5G_DO">
    <property name="geometry">
     <rect>
      <x>1015</x>
      <y>200</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J5-G</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2K_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>280</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-K</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ3D_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>480</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J3-D</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ5C_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>580</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J5-C</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2E_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>180</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-E</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ62_DO">
    <property name="geometry">
     <rect>
      <x>1015</x>
      <y>280</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J6-2</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ8D_DO">
    <property name="geometry">
     <rect>
      <x>1015</x>
      <y>480</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J8-D</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ2M_DO">
    <property name="geometry">
     <rect>
      <x>350</x>
      <y>380</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J2-M</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ7D_DO">
    <property name="geometry">
     <rect>
      <x>1015</x>
      <y>380</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J7-D</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ3C">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>430</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ4B">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>530</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ8B">
    <property name="geometry">
     <rect>
      <x>1161</x>
      <y>430</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2L">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>330</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2F">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>230</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ8F">
    <property name="geometry">
     <rect>
      <x>1161</x>
      <y>530</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ5D">
    <property name="geometry">
     <rect>
      <x>1161</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2D">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ7C">
    <property name="geometry">
     <rect>
      <x>1161</x>
      <y>330</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_119">
    <property name="geometry">
     <rect>
      <x>454</x>
      <y>86</y>
      <width>121</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuity
 Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ3D">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>480</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ62">
    <property name="geometry">
     <rect>
      <x>1161</x>
      <y>280</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ7D">
    <property name="geometry">
     <rect>
      <x>1161</x>
      <y>380</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ8D">
    <property name="geometry">
     <rect>
      <x>1161</x>
      <y>480</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ8G">
    <property name="geometry">
     <rect>
      <x>1697</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string>Continuity 
 Error</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_120">
    <property name="geometry">
     <rect>
      <x>1111</x>
      <y>75</y>
      <width>121</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuity
 Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2E">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>180</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2K">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>280</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ2M">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>380</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ5C">
    <property name="geometry">
     <rect>
      <x>500</x>
      <y>580</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ5G">
    <property name="geometry">
     <rect>
      <x>1161</x>
      <y>200</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_121">
    <property name="geometry">
     <rect>
      <x>1050</x>
      <y>75</y>
      <width>61</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO</string>
    </property>
   </widget>
   <widget class="QLabel" name="lbl_J8H_DO">
    <property name="geometry">
     <rect>
      <x>1610</x>
      <y>134</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblJ5F_DO">
    <property name="geometry">
     <rect>
      <x>677</x>
      <y>230</y>
      <width>100</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>J5-F</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBBATJ5F">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>230</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2H_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>330</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2B_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>180</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ3B_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>480</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2J_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>380</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ4A_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>530</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2A_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2C_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>230</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2G_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>280</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ3A_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>430</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ5A_OnOff">
    <property name="geometry">
     <rect>
      <x>270</x>
      <y>580</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_122">
    <property name="geometry">
     <rect>
      <x>248</x>
      <y>77</y>
      <width>81</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO ON</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2D_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2M_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>380</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2L_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>330</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ4B_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>530</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ5C_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>580</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_123">
    <property name="geometry">
     <rect>
      <x>583</x>
      <y>77</y>
      <width>81</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO ON</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2E_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>180</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2K_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>280</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ3C_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>430</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ2F_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>230</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ3D_OnOff">
    <property name="geometry">
     <rect>
      <x>598</x>
      <y>480</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_124">
    <property name="geometry">
     <rect>
      <x>1793</x>
      <y>77</y>
      <width>71</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO ON</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ8G_OnOff">
    <property name="geometry">
     <rect>
      <x>1810</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbTimerChkDO1_OnOff">
    <property name="geometry">
     <rect>
      <x>1810</x>
      <y>190</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbTimerChkDO2_OnOff">
    <property name="geometry">
     <rect>
      <x>1810</x>
      <y>250</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ8D_OnOff">
    <property name="geometry">
     <rect>
      <x>1261</x>
      <y>480</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ8B_OnOff">
    <property name="geometry">
     <rect>
      <x>1261</x>
      <y>430</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ5G_OnOff">
    <property name="geometry">
     <rect>
      <x>1261</x>
      <y>200</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ7D_OnOff">
    <property name="geometry">
     <rect>
      <x>1261</x>
      <y>380</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ8F_OnOff">
    <property name="geometry">
     <rect>
      <x>1261</x>
      <y>530</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ62_OnOff">
    <property name="geometry">
     <rect>
      <x>1261</x>
      <y>280</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ7C_OnOff">
    <property name="geometry">
     <rect>
      <x>1261</x>
      <y>330</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ5D_OnOff">
    <property name="geometry">
     <rect>
      <x>1261</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_125">
    <property name="geometry">
     <rect>
      <x>1245</x>
      <y>80</y>
      <width>71</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO ON</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ8E_OnOff">
    <property name="geometry">
     <rect>
      <x>920</x>
      <y>530</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ5B_OnOff">
    <property name="geometry">
     <rect>
      <x>920</x>
      <y>130</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ5E_OnOff">
    <property name="geometry">
     <rect>
      <x>920</x>
      <y>180</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ8A_OnOff">
    <property name="geometry">
     <rect>
      <x>920</x>
      <y>430</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ5F_OnOff">
    <property name="geometry">
     <rect>
      <x>920</x>
      <y>230</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ8C_OnOff">
    <property name="geometry">
     <rect>
      <x>920</x>
      <y>480</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ61_OnOff">
    <property name="geometry">
     <rect>
      <x>920</x>
      <y>280</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ7A_OnOff">
    <property name="geometry">
     <rect>
      <x>920</x>
      <y>330</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbJ7B_OnOff">
    <property name="geometry">
     <rect>
      <x>920</x>
      <y>380</y>
      <width>31</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_126">
    <property name="geometry">
     <rect>
      <x>901</x>
      <y>79</y>
      <width>71</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO ON</string>
    </property>
   </widget>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
