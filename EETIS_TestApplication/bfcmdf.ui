<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>bfcmdf</class>
 <widget class="QWidget" name="bfcmdf">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1900</width>
    <height>900</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QGroupBox" name="groupBox">
   <property name="geometry">
    <rect>
     <x>471</x>
     <y>60</y>
     <width>941</width>
     <height>155</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">background:color rgb(150,160,186,40%);
border-radius:10px;</string>
   </property>
   <property name="title">
    <string/>
   </property>
   <widget class="QLabel" name="lblHarnessLED">
    <property name="geometry">
     <rect>
      <x>360</x>
      <y>94</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblHarness">
    <property name="geometry">
     <rect>
      <x>17</x>
      <y>88</y>
      <width>218</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>Harness</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QPushButton" name="pbHarness">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>441</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>14</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(53, 74, 131); 
color: rgb(255, 255, 255);</string>
    </property>
    <property name="text">
     <string>BFCMDF harness check connection</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_103">
    <property name="geometry">
     <rect>
      <x>121</x>
      <y>49</y>
      <width>61</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DI's</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_104">
    <property name="geometry">
     <rect>
      <x>335</x>
      <y>49</y>
      <width>81</width>
      <height>33</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO's</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_105">
    <property name="geometry">
     <rect>
      <x>460</x>
      <y>41</y>
      <width>191</width>
      <height>51</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuty Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="ckHarnessContinutyError">
    <property name="geometry">
     <rect>
      <x>540</x>
      <y>95</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_115">
    <property name="geometry">
     <rect>
      <x>780</x>
      <y>41</y>
      <width>81</width>
      <height>51</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Force
DO OFF</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_108">
    <property name="geometry">
     <rect>
      <x>660</x>
      <y>41</y>
      <width>81</width>
      <height>51</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Force
DO ON</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="ckHarnessForceDoOn">
    <property name="geometry">
     <rect>
      <x>680</x>
      <y>95</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="ckHarnessForceDoOff">
    <property name="geometry">
     <rect>
      <x>800</x>
      <y>95</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
  </widget>
  <widget class="QGroupBox" name="groupBox_2">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>384</y>
     <width>1861</width>
     <height>391</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">background:color rgb(150,160,186,40%);
border-radius:10px;</string>
   </property>
   <property name="title">
    <string/>
   </property>
   <widget class="QPushButton" name="pbHarness_2">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>441</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>14</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(53, 74, 131); 
color: rgb(255, 255, 255);</string>
    </property>
    <property name="text">
     <string>Continuty Check</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_107">
    <property name="geometry">
     <rect>
      <x>264</x>
      <y>80</y>
      <width>81</width>
      <height>33</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO's</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_106">
    <property name="geometry">
     <rect>
      <x>317</x>
      <y>78</y>
      <width>191</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuty Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_109">
    <property name="geometry">
     <rect>
      <x>480</x>
      <y>77</y>
      <width>241</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Cross Continuty Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblPowerOn">
    <property name="geometry">
     <rect>
      <x>480</x>
      <y>0</y>
      <width>218</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>Power ON DI</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_110">
    <property name="geometry">
     <rect>
      <x>99</x>
      <y>78</y>
      <width>81</width>
      <height>33</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DI's</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblForceDoOff">
    <property name="geometry">
     <rect>
      <x>800</x>
      <y>78</y>
      <width>81</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Force
 DO OFF</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblForceDoOn">
    <property name="geometry">
     <rect>
      <x>710</x>
      <y>78</y>
      <width>81</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Force
 DO ON</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_111">
    <property name="geometry">
     <rect>
      <x>1268</x>
      <y>78</y>
      <width>191</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuty Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_112">
    <property name="geometry">
     <rect>
      <x>1215</x>
      <y>80</y>
      <width>81</width>
      <height>33</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO's</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_113">
    <property name="geometry">
     <rect>
      <x>1050</x>
      <y>78</y>
      <width>81</width>
      <height>33</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DI's</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_114">
    <property name="geometry">
     <rect>
      <x>1431</x>
      <y>77</y>
      <width>241</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>16</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Cross Continuty Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblForceDoOff_2">
    <property name="geometry">
     <rect>
      <x>1751</x>
      <y>78</y>
      <width>81</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Force
 DO OFF</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblForceDoOn_2">
    <property name="geometry">
     <rect>
      <x>1661</x>
      <y>78</y>
      <width>81</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Force
 DO ON</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbFireButton1_Off">
    <property name="geometry">
     <rect>
      <x>821</x>
      <y>130</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblFireButton1_LED">
    <property name="geometry">
     <rect>
      <x>290</x>
      <y>129</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContinutyFireButton1">
    <property name="geometry">
     <rect>
      <x>398</x>
      <y>130</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbCrossContinutyFireButton1">
    <property name="geometry">
     <rect>
      <x>586</x>
      <y>130</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblFireButton1">
    <property name="geometry">
     <rect>
      <x>31</x>
      <y>124</y>
      <width>218</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>FIRE BUTTON 1</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbFireButton1_On">
    <property name="geometry">
     <rect>
      <x>741</x>
      <y>130</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbFireButton2_Off">
    <property name="geometry">
     <rect>
      <x>1770</x>
      <y>128</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblFireButton2_LED">
    <property name="geometry">
     <rect>
      <x>1239</x>
      <y>127</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContinutyFireButton2">
    <property name="geometry">
     <rect>
      <x>1347</x>
      <y>128</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbCrossContinutyFireButton2">
    <property name="geometry">
     <rect>
      <x>1535</x>
      <y>128</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblFireButton2">
    <property name="geometry">
     <rect>
      <x>980</x>
      <y>122</y>
      <width>218</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>FIRE BUTTON 2</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbFireButton2_On">
    <property name="geometry">
     <rect>
      <x>1690</x>
      <y>128</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBreechClosing1_Off">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>220</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbCrossContinutyBreechClosing1">
    <property name="geometry">
     <rect>
      <x>585</x>
      <y>220</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContinutyBreechClosing1">
    <property name="geometry">
     <rect>
      <x>397</x>
      <y>220</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblBreechClosing1">
    <property name="geometry">
     <rect>
      <x>30</x>
      <y>214</y>
      <width>218</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>BREECH CLOASING 1</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblBreechClosing1_LED">
    <property name="geometry">
     <rect>
      <x>289</x>
      <y>219</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBreechClosing1_On">
    <property name="geometry">
     <rect>
      <x>740</x>
      <y>220</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBreechClosing2_On">
    <property name="geometry">
     <rect>
      <x>1689</x>
      <y>220</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblBreechClosing2">
    <property name="geometry">
     <rect>
      <x>979</x>
      <y>214</y>
      <width>218</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>BREECH CLOASING 2</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContinutyBreechClosing2">
    <property name="geometry">
     <rect>
      <x>1346</x>
      <y>220</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbBreechClosing2_Off">
    <property name="geometry">
     <rect>
      <x>1769</x>
      <y>220</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblBreechClosing2_LED">
    <property name="geometry">
     <rect>
      <x>1238</x>
      <y>219</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbCrossContinutyBreechClosing2">
    <property name="geometry">
     <rect>
      <x>1534</x>
      <y>220</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblSwitch_LED">
    <property name="geometry">
     <rect>
      <x>288</x>
      <y>309</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbSwitch_Off">
    <property name="geometry">
     <rect>
      <x>819</x>
      <y>310</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbCrossContinutySwitch">
    <property name="geometry">
     <rect>
      <x>584</x>
      <y>310</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContinutySwitch">
    <property name="geometry">
     <rect>
      <x>396</x>
      <y>310</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblSwitch">
    <property name="geometry">
     <rect>
      <x>29</x>
      <y>304</y>
      <width>218</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>CONTINUITY</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbSwitch_On">
    <property name="geometry">
     <rect>
      <x>739</x>
      <y>310</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
  </widget>
  <widget class="QGroupBox" name="groupBox_3">
   <property name="geometry">
    <rect>
     <x>377</x>
     <y>230</y>
     <width>1125</width>
     <height>139</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">background:color rgb(150,160,186,40%);
border-radius:10px;</string>
   </property>
   <property name="title">
    <string/>
   </property>
   <widget class="QPushButton" name="pbHarness_3">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>441</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>14</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(53, 74, 131); 
color: rgb(255, 255, 255);</string>
    </property>
    <property name="text">
     <string>DI</string>
    </property>
   </widget>
   <widget class="QLabel" name="lblFireReady">
    <property name="geometry">
     <rect>
      <x>72</x>
      <y>70</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>FIRE READY</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblFireForbidden">
    <property name="geometry">
     <rect>
      <x>458</x>
      <y>70</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>FIRE FORBIDDEN</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblShellLoaded">
    <property name="geometry">
     <rect>
      <x>848</x>
      <y>70</y>
      <width>200</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>SHELL LOADED</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
  </widget>
  <widget class="QLabel" name="lblOPRMODE_2">
   <property name="geometry">
    <rect>
     <x>796</x>
     <y>4</y>
     <width>291</width>
     <height>41</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Roboto</family>
     <pointsize>25</pointsize>
     <weight>75</weight>
     <bold>true</bold>
     <underline>true</underline>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">
background:rgb(234, 236, 247);


color:rgb(53,74, 131);
</string>
   </property>
   <property name="text">
    <string>BFCMDF</string>
   </property>
   <property name="alignment">
    <set>Qt::AlignCenter</set>
   </property>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
