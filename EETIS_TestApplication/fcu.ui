<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>fcu</class>
 <widget class="QWidget" name="fcu">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1900</width>
    <height>900</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <widget class="QLabel" name="lblOPRMODE_2">
   <property name="geometry">
    <rect>
     <x>806</x>
     <y>5</y>
     <width>291</width>
     <height>41</height>
    </rect>
   </property>
   <property name="font">
    <font>
     <family>Roboto</family>
     <pointsize>25</pointsize>
     <weight>75</weight>
     <bold>true</bold>
     <underline>true</underline>
    </font>
   </property>
   <property name="styleSheet">
    <string notr="true">
background:rgb(234, 236, 247);


color:rgb(53,74, 131);
</string>
   </property>
   <property name="text">
    <string>FCU</string>
   </property>
   <property name="alignment">
    <set>Qt::AlignCenter</set>
   </property>
  </widget>
  <widget class="QGroupBox" name="groupBox">
   <property name="geometry">
    <rect>
     <x>339</x>
     <y>60</y>
     <width>931</width>
     <height>175</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">background:color rgb(150,160,186,40%);
border-radius:10px;</string>
   </property>
   <property name="title">
    <string/>
   </property>
   <widget class="QLabel" name="lblHarness1LED">
    <property name="geometry">
     <rect>
      <x>368</x>
      <y>83</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblCorrectHDI1">
    <property name="geometry">
     <rect>
      <x>139</x>
      <y>77</y>
      <width>160</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>DI-1</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QPushButton" name="pbHarness">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>301</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>14</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgb(53, 74, 131); 
color: rgb(255, 255, 255);</string>
    </property>
    <property name="text">
     <string>FCU  harness check connection</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_103">
    <property name="geometry">
     <rect>
      <x>203</x>
      <y>40</y>
      <width>61</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DI</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_104">
    <property name="geometry">
     <rect>
      <x>344</x>
      <y>43</y>
      <width>81</width>
      <height>33</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>DO</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_114">
    <property name="geometry">
     <rect>
      <x>429</x>
      <y>37</y>
      <width>191</width>
      <height>38</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,0%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Continuity Error</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContErrHarness1">
    <property name="geometry">
     <rect>
      <x>509</x>
      <y>86</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="lblCorrectHDI2">
    <property name="geometry">
     <rect>
      <x>139</x>
      <y>127</y>
      <width>160</width>
      <height>40</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>13</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border: 4px solid rgb(53,74, 131);
color:rgb(53,74, 131);
border-radius:5px;



</string>
    </property>
    <property name="text">
     <string>DI-2</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="lblHarness2LED">
    <property name="geometry">
     <rect>
      <x>368</x>
      <y>130</y>
      <width>30</width>
      <height>30</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background:rgb(234, 236, 247);
border-radius:15px;</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbContErrHarness2">
    <property name="geometry">
     <rect>
      <x>509</x>
      <y>130</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbHarnessDI2_On">
    <property name="geometry">
     <rect>
      <x>654</x>
      <y>130</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbHarnessDI1_On">
    <property name="geometry">
     <rect>
      <x>654</x>
      <y>86</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_105">
    <property name="geometry">
     <rect>
      <x>629</x>
      <y>37</y>
      <width>81</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Force
DO ON</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbHarnessDI1_Off">
    <property name="geometry">
     <rect>
      <x>774</x>
      <y>86</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_106">
    <property name="geometry">
     <rect>
      <x>749</x>
      <y>37</y>
      <width>81</width>
      <height>41</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Roboto</family>
      <pointsize>14</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">background:color rgb(150,160,186,1%);
color:rgb(53,74, 131);</string>
    </property>
    <property name="text">
     <string>Force
DO OFF</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QCheckBox" name="cbHarnessDI2_Off">
    <property name="geometry">
     <rect>
      <x>774</x>
      <y>130</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>-1</pointsize>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
    spacing: 18px; /* Adjust spacing between the checkbox and text */
    font-size: 28px; /* Set the font size */
    background-color: rgba(150, 160, 186, 1%); /* Background color */
 color:rgb(53,74, 131);
}

QCheckBox::indicator {
    width: 30px; /* Adjust the width of the checkbox indicator */
    height: 30px; /* Adjust the height of the checkbox indicator */
    border-radius: 30px; /* Make the indicator circular */
    border: 2px solid #cccccc; /* Add a border around the indicator */
color:rgb(53,74, 131);
}

QCheckBox::indicator:checked {
    background-color: #000000; /* Change the background color of the indicator when checked */
    border: 2px solid #ffffff; /* Add a border around the indicator when checked */
color:rgb(53,74, 131);
}

QCheckBox::indicator:unchecked {
    background-color: #ffffff; /* Change the background color of the indicator when unchecked */
color:rgb(53,74, 131);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
